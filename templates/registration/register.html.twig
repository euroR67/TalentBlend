{% extends 'base.html.twig' %}

{% block title %}Inscription{% endblock %}

{% block body %}
    <div class="container mt-4 register">
        <div class="wrapper">
            <form method="post" data-turbo="false">
                {{ form_start(registrationForm) }}
                {{ form_errors(registrationForm) }}
                
                <h2>Créer un compte gratuitement</h2>
                
                <h3 style="text-align: center; opacity: 0.7;">Inscription en tant que :</h3><br>

                <div class="choice">
                    {{ form_widget(registrationForm.role, {'id': 'inputRole'}) }}
                </div>

                <div class="form-group">
                    <div>
                        {{ form_label(registrationForm.email, 'Adresse email') }}
                        {{ form_widget(registrationForm.email, {'attr': {'class': 'form-control', 'placeholder': 'exemple@gmail.com'}}) }}
                    </div>
                </div>

                {% if form_errors(registrationForm.email) %}
                    <ul class="form-error-message">
                        <li><i class="fa-solid fa-triangle-exclamation"></i> {{ form_errors(registrationForm.email) }}</li>
                    </ul>
                {% endif %}

                <div class="form-group">
                    <div>
                        {{ form_label(registrationForm.nom, 'Nom') }}
                        {{ form_widget(registrationForm.nom, {'attr': {'class': 'form-control', 'placeholder': 'Doe'}}) }}
                    </div>
                    <div>
                        {{ form_label(registrationForm.prenom, 'Prénom') }}
                        {{ form_widget(registrationForm.prenom, {'attr': {'class': 'form-control', 'placeholder': 'John'}}) }}
                    </div>
                </div>

                <div class="form-group">
                    <div class="password-input-box">
                        <label for="inputPassword">Mot de passe</label>
                        {{ form_widget(registrationForm.plainPassword.first, {'attr': {'class': 'password-input form-control', 'placeholder': 'Entrer un mot de passe', 'type': 'password'}, 'id': 'inputPassword', 'onpaste': 'return false;'}) }}
                        <i class="fa-solid fa-eye show-password"></i>
                
                        <div class="password-checklist">
                            <h3 class="checklist-title">Le mot de passe doit contenir</h3>
                
                            <ul class="checklist">
                                <li class="list-item">Au moins 8 caractères</li>
                                <li class="list-item">Au moins 1 chiffre</li>
                                <li class="list-item">Au moins 1 lettre minuscule</li>
                                <li class="list-item">Au moins 1 lettre majuscule</li>
                                <li class="list-item">Au moins 1 caractère spécial</li>
                            </ul>
                        </div>
                    </div>
                    <div>
                        <label for="inputConfirmPassword">Confirmer le mot de passe</label>
                        <div class="password-input-box">
                            {{ form_widget(registrationForm.plainPassword.second, {'attr': {'class': 'password-input form-control', 'placeholder': 'Confirmer le mot de passe', 'type': 'password'}, 'id': 'inputConfirmPassword', 'onpaste': 'return false;'}) }}
                            <i class="fa-solid fa-eye show-password"></i>
                        </div>
                    </div>
                </div>
                {% if form_errors(registrationForm.plainPassword.first) %}
                    <ul class="form-error-message">
                        <li><i class="fa-solid fa-triangle-exclamation"></i> {{ form_errors(registrationForm.plainPassword.first) }}</li>
                    </ul>
                {% endif %}

                <div class="form-check">
                    {{ form_widget(registrationForm.agreeTerms, {'attr': {'class': 'form-check-input'}}) }}
                    <label class="form-check-label" for="{{ registrationForm.agreeTerms.vars.id }}">J’accepte les <a href="{{ path('conditions_utilisation') }}">termes d’utilisation</a> et la <a href="{{ path('donnees_personnelles') }}">politique de confidentialité</a></label>
                </div><br>

                <button class="btn btn-lg btn-primary" type="submit">Inscription</button>

                <p class="haveacc">Vous avez déjà un compte ? <a href="{{ path('app_login') }}">Connectez-vous</a></p>
                {{ form_rest(registrationForm) }}
                {{ form_end(registrationForm) }}
            </form>
        </div>
    </div>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var passwordInput = document.getElementById('inputPassword');
            var confirmPasswordInput = document.getElementById('inputConfirmPassword');
    
            function preventPaste(event) {
                event.preventDefault();
            }
    
            passwordInput.addEventListener('paste', preventPaste);
            confirmPasswordInput.addEventListener('paste', preventPaste);
        });
    </script>
    <script>
        let showPasswordBtns = document.querySelectorAll(".show-password");
        let passwordInputs = document.querySelectorAll(".password-input");
        let passwordChecklists = document.querySelectorAll(".list-item");
        
        showPasswordBtns.forEach((btn, index) => {
            btn.addEventListener("click", () => {
                btn.classList.toggle("fa-eye");
                btn.classList.toggle("fa-eye-slash");
        
                passwordInputs[index].type = passwordInputs[index].type === "password" ? "text" : "password";
            });
        });
        
        let validationRegex = [
            { regex: /.{8,}/ },
            { regex: /[0-9]/ },
            { regex: /[a-z]/ },
            { regex: /[A-Z]/ },
            { regex: /[^A-Za-z0-9]/ }
        ];
        
        passwordInputs.forEach((input, index) => {
            input.addEventListener("keyup", () => {
                validationRegex.forEach((item, i) => {
                    let isValid = item.regex.test(input.value);
        
                    if (isValid) {
                        passwordChecklists[i].classList.add("checked");
                    } else {
                        passwordChecklists[i].classList.remove("checked");
                    }
                });
            });
        });
    </script>
{% endblock %}