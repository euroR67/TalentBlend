{% extends 'dashboard.html.twig' %}

{% block title %}Profil{% endblock %}

{% block body %}

<div class="wrapper">

    <h2>Paramètres du profil</h2>

    <ul class="tab">
        <li class="active">Votre profil</li>
        <li>Formation</li>
        <li>Expérience</li>
    </ul>
    
    {{ form_errors(form) }}
    {{ form_start(form, {'attr': {'data-turbo': 'false'}}) }}
    <div class="section-wrapper">
        
        <div class="profil">
            <h3>Vos informations</h3>
            <div class="form-pdp-cv">
                <div class="pdp-attach">
                    <h4>Votre photo</h4>
                    <div class="avatar-upload">
                        <div class="avatar-edit">
                            {{ form_widget(form.photo, {'attr': {'class': 'form-control'}, 'id': 'selectPhoto'}) }}
                            <label for="selectPhoto"></label>
                        </div>
                        <div class="avatar-preview">
                            {% if app.user.photo %}
                            {% set imageUrl = 'pdp/' ~ app.user.photo %}
                            <div id="imagePreview" style="background-image: url('{{ asset(imageUrl) }}');"></div>
                            {% else %}
                                <div id="imagePreview" style="background-image: url('https://www.gravatar.com/avatar/default?s=192&d=mp');"></div>
                            {% endif %}
                        </div>
                        <div class="supp">
                            {% if app.user.photo %}
                                {{ form_row(form.deletePhoto) }}
                                {{ form_label(form.deletePhoto, 'Supprimer la photo') }}
                            {% endif %}
                        </div>
                    </div>
                </div>
                
                <div class="cv-attach">
                    <h4>Votre CV</h4>
                    <div class="custom-file-upload">
                        <label for="selectCv">
                            <svg class="upload" xmlns="http://www.w3.org/2000/svg" height="1.5em" viewBox="0 0 512 512">
                                <style>svg{fill:#a3a3a3}</style>
                                <path d="M256 512A256 256 0 1 0 256 0a256 256 0 1 0 0 512zM385 231c9.4 9.4 9.4 24.6 0 33.9s-24.6 9.4-33.9 0l-71-71V376c0 13.3-10.7 24-24 24s-24-10.7-24-24V193.9l-71 71c-9.4 9.4-24.6 9.4-33.9 0s-9.4-24.6 0-33.9L239 119c9.4-9.4 24.6-9.4 33.9 0L385 231z"/>
                            </svg>
                            <p id="file-placeholder">{{ app.user.cv ? 'Modifier le CV' : 'Ajouter un CV' }}</p>
                        </label>
                        {{ form_widget(form.cv, {'attr': {'class': 'file', 'onchange': 'updateFileName(this)'}, 'id': 'selectCv'}) }}
                        
                        {% if app.user.cv %}
                            <a id="file-name" href="{{ asset('cv/' ~ app.user.cv) }}" target="_blank">Voir le CV</a>
                        {% else %}
                            <p id="file-name" style="display: none;"></p>
                        {% endif %}
                    </div>
                    
                    {% if app.user.cv %}
                        <div class="supp">
                            {{ form_row(form.deleteCV) }}
                            {{ form_label(form.deleteCV, 'Supprimer le CV') }}
                        </div>
                    {% endif %}
                </div>
            </div>

            <div class="form-group">
                <div>
                    {{ form_label(form.nom, 'Nom') }}
                    {{ form_widget(form.nom, {'attr': {'class': 'form-control'}}) }}
                </div>
                <div>
                    {{ form_label(form.prenom, 'Prénom') }}
                    {{ form_widget(form.prenom, {'attr': {'class': 'form-control'}}) }}
                </div>
            </div>

            <div class="form-group">
                <div>
                    {{ form_label(form.email, 'Email') }}
                    {{ form_widget(form.email, {'attr': {'class': 'form-control'}}) }}
                </div>
            </div>

            <div class="form-group">
                <div>
                    {{ form_label(form.metier, 'Métier') }}
                    {{ form_widget(form.metier, {'attr': {'class': 'form-control'}}) }}
                </div>
                <div>
                    {{ form_label(form.niveau, 'Niveau d\'expérience') }}
                    {{ form_widget(form.niveau, {'attr': {'class': 'form-control'}}) }}
                </div>
            </div>

            <div class="form-group">
                <div>
                    {{ form_label(form.typesEmploi, 'Type d\'emploi recherché') }}
                    {{ form_widget(form.typesEmploi, {'attr': {'class': 'form-control selectTypeEmplois'}}) }}
                </div>
                <div>
                    {{ form_label(form.contrats, 'Type de contrat recherché') }}
                    {{ form_widget(form.contrats, {'attr': {'class': 'form-control selectcontrats'}}) }}
                </div>
            </div>
        
            <div class="form-group">
                <div>
                    {{ form_label(form.langues, 'Langues') }}
                    {{ form_widget(form.langues, {'attr': {'class': 'form-control selectLangues'}}) }}
                </div>
                <div>
                    {{ form_label(form.ville, 'Ville') }}
                    {{ form_widget(form.ville, {'attr': {'class': 'form-control'}}) }}
                </div>
            </div>

            <div class="choice">
                {{ form_label(form.active, 'Activer mon profil') }}
                {{ form_widget(form.active) }}
                <a href="{{ path('app_show_profil', {'id': app.user.id })}}" data-turbo="false">Voir mon profil candidat</a>
            </div>

            <div class="form-group">
                <div>
                    {{ form_widget(form.description, {'attr': {'class': 'form-control', 'rows': 10}}) }}
                </div>
            </div>

            <div class="overview"></div>
        </div>
            
        <div class="formation" style="display: none">
            <h3>Formations</h3>
            <div class="formations"
            data-index="{{ form.formations|length }}"
            data-prototype="
                <div class='dropdown-fx'>
                    <span>
                        <h6>Formation __name__</h6>
                    </span>
                    <i class='fa-solid fa-chevron-down'></i>
                </div>
                <div class='drop'>
                    <div class='form-group'>
                        <div>
                            <label for='candidat_formations___name___titre'>Titre</label>
                            <input type='text' id='candidat_formations___name___titre' name='candidat[formations][__name__][titre]' required='required' class='form-control' placeholder='Ex: Conseil en Relations Humaines'>
                        </div>
                        <div>
                            <label for='candidat_formations___name___qualification'>Qualification</label>
                            <input type='text' id='candidat_formations___name___qualification' name='candidat[formations][__name__][qualification]' required='required' class='form-control' placeholder='Ex: Licence en Conseil en Relations Humaines'>
                        </div>
                    </div>
                    <div class='form-group'>
                        <div>
                            <label for='candidat_formations___name___dateDebut'>Date de début</label>
                            <input type='date' id='candidat_formations___name___dateDebut' name='candidat[formations][__name__][dateDebut]' required='required' class='form-control'>
                        </div>
                        <div>
                            <label for='candidat_formations___name___dateFin'>Date de fin</label>
                            <input type='date' id='candidat_formations___name___dateFin' name='candidat[formations][__name__][dateFin]' required='required' class='form-control'>
                        </div>
                    </div>
                    <div class='form-group'>
                        <div>
                            <label for='candidat_formations___name___description'>Description</label>
                            <textarea id='candidat_formations___name___description' name='candidat[formations][__name__][description]' required='required' class='form-control' rows='10' placeholder='Donnez une description de votre formation...'></textarea>
                        </div>
                    </div>
                </div>
            ">
                {% for formation in form.formations %}
                    <div class="formfield">
                        <div class="dropdown-fx">
                            <span>
                                {# Ici le bouton remove #}
                                <h6>Formation {{ loop.index }}</h6>
                            </span>
                            <i class="fa-solid fa-chevron-down"></i>
                        </div>
                        <div class="drop">
                            <div class="form-group">
                                <div>
                                    {{ form_label(formation.titre, 'Titre') }}
                                    {{ form_widget(formation.titre, {'attr': {'class': 'form-control'}}) }}
                                </div>
                                <div>
                                    {{ form_label(formation.qualification, 'Qualification') }}
                                    {{ form_widget(formation.qualification, {'attr': {'class': 'form-control'}}) }}
                                </div>
                            </div>
                            <div class="form-group">
                                <div>
                                    {{ form_label(formation.dateDebut, 'Date de début') }}
                                    {{ form_widget(formation.dateDebut, {'attr': {'class': 'form-control'}}) }}
                                </div>
                                <div>
                                    {{ form_label(formation.dateFin, 'Date de fin') }}
                                    {{ form_widget(formation.dateFin, {'attr': {'class': 'form-control'}}) }}
                                </div>
                            </div>
                            <div class="form-group">
                                <div>
                                    {{ form_label(formation.description, 'Description') }}
                                    {{ form_widget(formation.description, {'attr': {'class': 'form-control', 'rows': 10}}) }}
                                </div>
                            </div>
                        </div>
                    </div>
                {% endfor %}
            </div>
            <button type="button" class="add_formation_link" data-collection-holder-class="formations"><i class="fa-solid fa-chevron-down"></i> Ajouter une autre formation</button>
        </div>

        <div class="experience" style="display: none">
            <h3>Expériences</h3>
            <div class="experiences"
            data-index="{{ form.experiences|length }}"
            data-prototype="
                <div class='dropdown-fx'>
                    <span>
                        <h6>Expérience __name__</h6>
                    </span>
                    <i class='fa-solid fa-chevron-down'></i>
                </div>
                <div class='drop'>
                    <div class='form-group'>
                        <div>
                            <label for='candidat_experiences___name___titre'>Titre</label>
                            <input type='text' id='candidat_experiences___name___titre' name='candidat[experiences][__name__][titre]' required='required' class='form-control' placeholder='Ex: Développeur Web Fullstack'>
                        </div>
                        <div>
                            <label for='candidat_experiences___name___entreprise'>Entreprise</label>
                            <input type='text' id='candidat_experiences___name___entreprise' name='candidat[experiences][__name__][entreprise]' required='required' class='form-control' placeholder='Ex: Actency'>
                        </div>
                    </div>
                    <div class='form-group'>
                        <div>
                            <label for='candidat_experiences___name___dateDebut'>Date de début</label>
                            <input type='date' id='candidat_experiences___name___dateDebut' name='candidat[experiences][__name__][dateDebut]' required='required' class='form-control'>
                        </div>
                        <div>
                            <label for='candidat_experiences___name___dateFin'>Date de fin</label>
                            <input type='date' id='candidat_experiences___name___dateFin' name='candidat[experiences][__name__][dateFin]' required='required' class='form-control'>
                        </div>
                    </div>
                    <div class='form-group'>
                        <div>
                            <label for='candidat_experiences___name___description'>Description</label>
                            <textarea id='candidat_experiences___name___description' name='candidat[experiences][__name__][description]' required='required' class='form-control' rows='10' placeholder='Donnez une description de votre expérience...'></textarea>
                        </div>
                    </div>
                </div>
            ">
                {% for experience in form.experiences %}
                    <div class="formfield">
                        <div class="dropdown-fx">
                            <span>
                                <h6>Expérience {{ loop.index }}</h6>
                            </span>
                            <i class="fa-solid fa-chevron-down"></i>
                        </div>
                        <div class="drop">
                            <div class="form-group sure">
                                <div>
                                    {{ form_label(experience.titre, 'Titre') }}
                                    {{ form_row(experience.titre, {'attr': {'class': 'form-control'}}) }}
                                </div>
                                <div>
                                    {{ form_label(experience.entreprise, 'Entreprise') }}
                                    {{ form_row(experience.entreprise, {'attr': {'class': 'form-control'}}) }}
                                </div>
                            </div>
                            <div class="form-group">
                                <div>
                                    {{ form_label(experience.dateDebut, 'Date de début') }}
                                    {{ form_row(experience.dateDebut, {'attr': {'class': 'form-control'}}) }}
                                </div>
                                <div>
                                    {{ form_label(experience.dateFin, 'Date de fin') }}
                                    {{ form_row(experience.dateFin, {'attr': {'class': 'form-control'}}) }}
                                </div>
                            </div>
                            <div class="form-group">
                                <div>
                                    {{ form_label(experience.description, 'Description') }}
                                    {{ form_row(experience.description, {'attr': {'class': 'form-control', 'rows': 10}}) }}
                                </div>
                            </div>
                        </div>
                    </div>
                {% endfor %}
            </div>
            <button type="button" class="add_experience_link" data-collection-holder-class="experiences"><i class="fa-solid fa-chevron-down"></i> Ajouter une autre expérience</button>
        </div>

    </div>

    <div class="sub-cancel">
        <button type="submit">Appliquer</button>
        <a href="">Annuler</a>
    </div>

    {{ form_end(form) }}
    
</div>

{# Script qui gère le collectiontype #}
<script>
    document.addEventListener('turbo:load', function() {
    // Ajouter un lien de suppression à toutes les formations
    const addFormationFormDeleteLink = (formation) => {
        const removeButton = document.createElement('button');
        removeButton.innerHTML = '<i class="fa-solid fa-xmark"></i>';
        removeButton.addEventListener('click', (e) => {
            e.preventDefault();
            formation.remove();
            updateFormationIndices();
            document.querySelector('.formations').dataset.index--;
        });

        const dropdownFx = formation.querySelector('.dropdown-fx span');
        if (dropdownFx) {
            dropdownFx.prepend(removeButton);
        }
    };

    // Mettre à jour les indices de toutes les formations
    const updateFormationIndices = () => {
        document.querySelectorAll('div.formations .formfield').forEach((formation, index) => {
            formation.querySelector('.dropdown-fx span h6').textContent = 'Formation ' + (index + 1);
        });
    };

    // Ajouter un lien de suppression à toutes les expériences
    const addExperienceFormDeleteLink = (experience) => {
        const removeButton = document.createElement('button');
        removeButton.innerHTML = '<i class="fa-solid fa-xmark"></i>';
        removeButton.addEventListener('click', (e) => {
            e.preventDefault();
            experience.remove();
            updateExperienceIndices();
            document.querySelector('.experiences').dataset.index--;
        });

        const dropdownFx = experience.querySelector('.dropdown-fx span');
        if (dropdownFx) {
            dropdownFx.prepend(removeButton);
        }
    };

    // Mettre à jour les indices de toutes les formations
    const updateExperienceIndices = () => {
        document.querySelectorAll('div.experiences .formfield').forEach((experience, index) => {
            experience.querySelector('.dropdown-fx span h6').textContent = 'Expérience ' + (index + 1);
        });
    };

    // Ajouter le formulaire d'ajout de formation au collectionHolder
    const addFormToCollection = (e) => {
        const collectionHolder = document.querySelector('.' + e.currentTarget.dataset.collectionHolderClass);
        
        const item = document.createElement('div');
        item.classList.add('formfield');
        
        item.innerHTML = collectionHolder
            .dataset
            .prototype
            .replace(
            /__name__/g,
            collectionHolder.dataset.index
            );
        
        collectionHolder.appendChild(item);
        
        // add a delete link to the new form
        addFormationFormDeleteLink(item);
        updateFormationIndices();

        // Increment the index for the next item
        collectionHolder.dataset.index++;
    };

    // Ajouter le formulaire d'ajout d'expérience au collectionHolder
    const addFormToCollection2 = (e) => {
        const collectionHolder = document.querySelector('.' + e.currentTarget.dataset.collectionHolderClass);
        
        const item = document.createElement('div');
        item.classList.add('formfield');
        
        item.innerHTML = collectionHolder
            .dataset
            .prototype
            .replace(
            /__name__/g,
            collectionHolder.dataset.index
            );
        
        collectionHolder.appendChild(item);
        
        collectionHolder.dataset.index++;
        
        // add a delete link to the new form
        addExperienceFormDeleteLink(item);
        updateExperienceIndices();

    };

    // Ajouter un écouteur d'évènement sur le bouton d'ajout de formation
    document
    .querySelectorAll('.add_formation_link')
    .forEach(btn => {
        btn.addEventListener('click', addFormToCollection);
    });

    // Ajouter un écouteur d'évènement sur le bouton d'ajout d'expérience  
    document
    .querySelectorAll('.add_experience_link')
    .forEach(btn => {
        btn.addEventListener("click", addFormToCollection2)
    });

    // Ajouter un bouton de suppression à tout les formulaires de formation
    document
    .querySelectorAll('div.formations .formfield')
    .forEach((formation, index) => {
        addFormationFormDeleteLink(formation);
    });

    // Ajouter un bouton de suppression à tout les formulaires d'expérience
    document
    .querySelectorAll('div.experiences .formfield')
    .forEach((experience, index) => {
        addExperienceFormDeleteLink(experience);
    });
    });
</script>
<script>
    // Fonction pour afficher le nom du fichier sélectionné
    function updateFileName(input) {
        const fileNameSpan = document.getElementById("file-name");
        const filePlaceholder = document.getElementById("file-placeholder");
        
        if (input.files.length > 0) {
            fileNameSpan.textContent = input.files[0].name;
            fileNameSpan.style.display = "block";
            filePlaceholder.style.display = "none";
        } else {
            fileNameSpan.textContent = "";
            fileNameSpan.style.display = "none";
            filePlaceholder.style.display = "block";
        }
    }
    
    // Select2.js
    // In your Javascript (external .js resource or <script> tag)
    $(document).ready(function() {
        $('.selectLangues').select2();
        $('.selectTypeEmplois').select2();
        $('.selectcontrats').select2();
    });

    // Fonction pour afficher l'image sélectionnée
    function readURL(input) {
        if (input.files && input.files[0]) {
            var reader = new FileReader();
            reader.onload = function(e) {
                $('#imagePreview').css('background-image', 'url('+e.target.result +')');
                $('#imagePreview').hide();
                $('#imagePreview').fadeIn(650);
            }
            reader.readAsDataURL(input.files[0]);
        }
    }
    
    // Afficher l'image sélectionnée
    $("#selectPhoto").change(function() {
        readURL(this);
    });

    // Fonction pour ouvrir / fermer les dropdowns formations et expériences
    document.querySelector('body').addEventListener('click', (event) => {
        let targetElement = event.target;
    
        // Trouver le parent '.dropdown-fx' de l'élément qui a été cliqué
        while (targetElement && !targetElement.matches('.dropdown-fx')) {
            targetElement = targetElement.parentElement;
        }
    
        if (targetElement) {
            // Trouver l'élément '.drop' correspondant
            const drop = targetElement.nextElementSibling;
    
            // Bascule la visibilité de l'élément '.drop'
            if (drop.style.display === 'none') {
                drop.style.display = 'block';
            } else {
                drop.style.display = 'none';
            }
        }
    });
    
</script>

{% endblock %}